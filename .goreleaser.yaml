# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    - go mod tidy

report_sizes: true

git:
  ignore_tags:
    - "{{ if not (isEnvSet \"IS_NIGHTLY_BUILD\") }}{{ .Env.NIGHTLY_TAG }}{{ end }}"

metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"

builds:
  - id: macos
    binary: libra
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - X main.version={{ if isEnvSet "IS_NIGHTLY_BUILD" }}{{ incpatch .PreviousTag }}-dev{{ else }}{{ .Version }}{{ end }}
    flags:
      - -trimpath
      - -buildmode=pie

  - id: linux
    binary: libra
    goos:
      - linux
    goarch:
      - amd64
      - arm64
      - arm
      - "386"
    goarm:
      - "6"
      - "7"
    ldflags:
      - -s -w
      - X main.version={{ if isEnvSet "IS_NIGHTLY_BUILD" }}{{ incpatch .PreviousTag }}-dev{{ else }}{{ .Version }}{{ end }}
    flags:
      - -trimpath

  - id: windows
    binary: libra
    goos:
      - windows
    goarch:
      - amd64
      - arm64
      - "386"
    ldflags:
      - -s -w
      - X main.version={{ if isEnvSet "IS_NIGHTLY_BUILD" }}{{ incpatch .PreviousTag }}-dev{{ else }}{{ .Version }}{{ end }}
    flags:
      - -trimpath

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  github:
    owner: DevReaper0
    name: goreleasertest
  prerelease: "{{ if isEnvSet \"IS_NIGHTLY_BUILD\" }}true{{ else }}auto{{ end }}"
